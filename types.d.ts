/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'ReceiveHarvestData': ApiRouteHandler<{ content: string; id?: string; farmId: string; metadata?: Record<string, unknown>; query?: string; conversationHistory?: Array<{ role: 'user' | 'assistant' | 'system'; content: string }> }, ApiResponse<200, { success: boolean; message: string; entryId: string; vectorIds?: Array<string>; agentResponse?: string }> | ApiResponse<400, { error: string }> | ApiResponse<401, { error: string; message: string }> | ApiResponse<403, { error: string; message: string }> | ApiResponse<500, { error: string }>, { topic: 'process-embeddings'; data: { entryId: string; content: string; metadata?: Record<string, unknown> } } | { topic: 'query-agent'; data: { entryId: string; query: string; conversationHistory?: Array<{ role: 'user' | 'assistant' | 'system'; content: string }> } }>
    'QueryHarvestLogbook': ApiRouteHandler<{ query: string; farmId: string; conversationHistory?: Array<{ role: 'user' | 'assistant' | 'system'; content: string }> }, ApiResponse<200, { success: boolean; message: string; queryId: string }> | ApiResponse<400, { error: string }> | ApiResponse<401, { error: string; message: string }> | ApiResponse<403, { error: string; message: string }> | ApiResponse<500, { error: string }>, { topic: 'query-agent'; data: { entryId: string; query: string; conversationHistory?: Array<{ role: 'user' | 'assistant' | 'system'; content: string }> } }>
    'QueryAgent': EventHandler<{ entryId: string; query: string; conversationHistory?: Array<{ role: 'user' | 'assistant' | 'system'; content: string }> }, { topic: 'log-to-sheets'; data: { entryId: string; query: string; response: string; sources?: Array<string> } }>
    'ProcessEmbeddings': EventHandler<{ entryId: string; content: string; metadata?: Record<string, unknown> }, never>
    'LogToSheets': EventHandler<{ entryId: string; query: string; response: string; sources?: Array<string> }, never>
  }
}